export const calculateAvailableCells = (playerCell: number, cells: number[]) => {
  // если персонаж стоит по центру, то все ячейки будут доступны...
  if (playerCell === 5 || playerCell === 6 || playerCell === 9 || playerCell === 10)
    return Array(4).fill(0).map((cell, index) => { return ( playerCell - cells[index] ) })
  let availableCells = [] as number[] // создаем пустой массив...
  cells.forEach(cell => {
    const newCell = playerCell + cell // координата новой точки...
    if (newCell < 0 || newCell > 15) return null // если точка выходит за рамки поля...
    if (newCell % 4 === 0 && (playerCell + 1) % 4 === 0) return null // если фишка стоит с правого края то мы не берем некст ячейку...
    if ((newCell + 1) % 4 === 0 && playerCell % 4 === 0) return null // если фишка стоит с левого края то мы не берем прошлую ячейку...
    availableCells = [...availableCells, newCell] // если ячейка не попала под все условия то добавляем ее в новый массив...
  })
  return availableCells
}